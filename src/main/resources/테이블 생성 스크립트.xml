<!--
#유저 테이블 생성#
CREATE TABLE USER_BAS(
        USER_NO INTEGER,
        USER_ID VARCHAR(20) UNIQUE NOT NULL,
        USER_PWD VARCHAR(100) NOT NULL,
        USER_NAME VARCHAR(10) NOT NULL,
        admin_yn VARCHAR(1) CHECK(admin_yn IN ('Y', 'N')),
        PHONE_NUMBER VARCHAR(30),
        ADDRESS VARCHAR(100),
        STATUS VARCHAR(10) NOT NULL CHECK(STATUS IN ('Y', 'N')),
        CREATE_DATE DATE,
        constraint user_pk primary key (USER_NO , USER_ID)
        );


#board 테이블 생성#
CREATE TABLE board (
    board_idx INTEGER,
    title VARCHAR(300) NOT NULL,
    contents VARCHAR2(500) NOT NULL ,
    hit_cnt NUMBER(5,0) DEFAULT 0 NOT NULL,
    created_datetime DATE NOT NULL,
    creator_id VARCHAR(50) NOT NULL,
    updated_datetime DATE DEFAULT NULL,
    updater_id VARCHAR(50) DEFAULT NULL,
    deleted_yn CHAR(1) DEFAULT 'N' NOT NULL,
    PRIMARY KEY(board_idx)
);

create table comment(
  comment_number INTEGER not null primary key, //댓글 seq
  board_number INTEGER not null,    //댓글이 달릴 게시글 seq
  comment_detail VARCHAR2(300) not null, //댓글 내용
  creator_id varchar2(50) not null, //댓글 작성자
  created_date DATE not null); // 댓글 작성 시간
  }

create table LIKES_BAS(
LIKENO NUMBER NOT NULL PRIMARY KEY ,
BNO NUMBER,
USER_ID VARCHAR2(50) NOT NULL,
RNO NUMBER,
LIKECHECK NUMBER DEFAULT 0 NOT NULL,
LIKEDATE DATE DEFAULT SYSDATE NOT NULL,
FOREIGN KEY (USER_ID) REFERENCES USER_BAS(USER_ID) ON DELETE CASCADE,
FOREIGN KEY (BNO) REFERENCES BOARD_AA (BOARD_IDX) ON DELETE CASCADE
);

CREATE TABLE FILE_DATA (
    idx INTEGER NOT NULL,
    board_idx INTEGER NOT NULL COMMENT,
    original_name VARCHAR2(260) NOT NULL COMMENT,
    save_name VARCHAR2(40) NOT NULL COMMENT,
    size INT NOT NULL COMMENT,
    PRIMARY KEY (idx)
);
create table FILE_DATA(
idx INTEGER NOT NULL,
board_idx INTEGER NOT NULL,
original_name VARCHAR2(260) NOT NULL,
save_name VARCHAR2(40) NOT NULL,
PRIMARY KEY (idx)
);
alter table FILE_DATA add constraint fk_attach_board_idx foreign key (board_idx) references FILE_DATA(idx);































-->

